# -*- coding: utf-8 -*-
"""
prompts.py
==========
Готовые инструкции LLM на три уровня «звёздности» описания.
Системная роль = калибровка стиля; пользовательский промпт = конкретная задача.
Ссылка на методологию: § 1.5 (Prompt-инжиниринг).
"""

SYSTEM_PROMPTS = {
    1: (
        "Вы — редактор упрощённых детских текстов. Пишите предельно фактологично, "
        "избегая образных приёмов."
    ),
    2: (
        "Вы — писатель среднего уровня. Используйте умеренную образность и чистую "
        "литературную норму."
    ),
    3: (
        "Вы — мастер художественного слова. Создавайте богатые метафорами, "
        "сенсорными деталями и звукописью тексты."
    ),
}

USER_PROMPTS = {
    # уровень 1 — базовая аннотация
    1: (
        "Создайте ПРОСТОЕ описание персонажа в жанре {genre}.\n\n"
        "ТЕХНИЧЕСКИЕ ТРЕБОВАНИЯ:\n"
        "• 60–100 слов, короткие предложения (6–10 слов).\n"
        "• Ни одной метафоры.\n"
        "• Структура: (1) имя+возраст, (2) 3 визуальные детали, (3) профессия, "
        "(4) 2 качества, (5) 1 бытовая привычка."
    ),
    # уровень 2
    2: (
        "Создайте описание персонажа СРЕДНЕГО качества в жанре {genre}.\n\n"
        "Требования: 120–200 слов, допускается 1–2 сравнения, умеренные эпитеты.\n"
        "Структура: имя+возраст, внешность (≥4 деталей), характер (3 качества "
        "с пояснением), профессия, поведенческая особенность, мотивация."
    ),
    # уровень 3
    3: (
        "Создайте ХУДОЖЕСТВЕННОЕ описание персонажа в жанре {genre}.\n\n"
        "Требования: 200–300 слов, ≥3 метафоры, синестезия, символизм, "
        "сложноподчинённые предложения.\n"
        "Структура: поэтический портрет + психологический анализ через "
        "образность + профессия как отражение души + философский штрих."
    ),
}


def build_prompt(level: int, genre: str) -> tuple[str, str]:
    """Возвращает пару (system_prompt, user_prompt)."""
    return SYSTEM_PROMPTS[level], USER_PROMPTS[level].format(genre=genre)


TEMPERATURE = {1: 0.2, 2: 0.6, 3: 0.8}
